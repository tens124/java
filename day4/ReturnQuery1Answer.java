package day4;

//이 문제는 푸는 데 실패. 아무래도 배열의 값을 지정할 때 
//answer[a] = arr[b]의 형태로 값을 교환하는 것은 불가능한 듯
//배열은 참조타입이기에 값이 아닌 메모리 주소를 주고받게 됨
//따라서 해당 코드는 좌항의 배열만이 아닌 우항의 배열 내용마저도 바꿔버린다
//이번 문제에서는 해당 코드를 작동시키는 순간 두 배열 모두 3,1,2,3,4로 내용이 바뀌어버린 후
//반복문을 통해 계속해서 서로의 주소값을 공유하는 형태로 작동하다 예측 불가능한 결과가 발생했음

//여기에 더해, 자바에서 두 수를 교환할 때는 x=y,y=x와 같은 형태보다는
//제3의 변수 z를 생성해 x의 값을 z에 할당하고, 그 후 값을 교환하는 것이 올바른 전략
//x는 5이고, y는 7이라고 해보자. 두 수를 교환하기 위해 x=y라는 수식을 쓰는 순간
//두 변수 모두 7로 변해버린다.
//따라서 우선 새로운 변수 z를 생성해 z=x를 통해 z에 5를 저장한 이후
//x=y를 통해 x에 7을, 마지막으로 y=z를 통해 y에 5를 할당하는 것이 맞는 방법이다
public class ReturnQuery1Answer {

	public int[] solution(int[] arr, int[][] queries) {
		for (int[] query : queries) {
		// 향상된 for문을 통해 2차원배열 queries의 각 인덱스에 존재하는
		// 1차원배열들을 하나하나 꺼내옴
			int a = query[0];
			int b = query[1];
			//이렇게 꺼내온 각 배열들의 앞 원소와 뒤 원소를 각각 a,b에 할당

			int temp = arr[a];
			//그 후 제3의 변수를 통해 양자의 교환을 진행
			arr[a] = arr[b];
			//같은 배열에서의 값 교환은 비교적 쉽다
			//int[] answer = Arrays.copyOf(arr, arr.length);
			//이처럼 answer이란 이름의 배열을 따로 생성하고 값을 통으로 복사할수도
			//이 경우에도 answer[a] = arr[b];의 형태로 사용해선 안됨
			//작동은 하지만, 원하는대로 작동하는 것이 아님.
			//의도대로라면 arr은 계속해서 고정된 값이어야겠지만
			//서로의 주소값을 참조하며 엉켜버림. 결국 예측 불가능한 결과가 발생하게 됨
			arr[b] = temp;
		}

		return arr;
	}
}
